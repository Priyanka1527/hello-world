import java.util.*;
import java.io.*;

class LinkedList
{
	//create the header node of the list
	static Node head;

	//class definition of Node 
	static class Node
	{
		int data; //data part
		Node next; //pointer part

		Node(int d)
		{
			data = d;
			next = null;
		}
	}

	// function to reverse the linked list
	Node reverselist(Node node)
	{
		Node prev = null;
		Node next = null;
		Node current = node;

		while(current != null)
		{
			next = current.next; // Next node is the immidiate ahead of the current node
			current.next = prev; // pointer to current node is set to point the previous
			prev = current; // now the previous node contains the current node
			current = next; // next node becomes the current node proceed further

		}

		node = prev;
		return node;
	}

	//function to print the linked list
	void printlist(Node node)
	{
		while(node != null)
		{
			System.out.print(node.data + "->");
			node = node.next;
		}
	}

	public static void main(String args[])
	{
		LinkedList list = new LinkedList();
		list.head = new Node(1);
		list.head.next = new Node(2);
		list.head.next.next = new Node(3);
		list.head.next.next.next = new Node(4);

		System.out.println("\n The Original Linked List: \n");
		list.printlist(head);
		head = list.reverselist(head);
		System.out.println("\n\n The Reversed Linked List: \n");
		list.printlist(head);
	}
}
